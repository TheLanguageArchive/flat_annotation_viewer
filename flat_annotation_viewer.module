<?php
require_once __DIR__ . '/vendor/autoload.php';

function flat_annotation_viewer_api($object) {

    module_load_include('inc', 'flat_annotation_viewer', 'includes/SolrMediaFetcher');

    $solr = new SolrMediaFetcher();
    $data = $solr->fetch($object->id);

    $parser = new TLA\EAF\Parser($data['annotation'], new TLA\EAF\Media\MediaResolver($data['locations']));
    $eaf    = $parser->parse();

    return drupal_json_output($eaf);
}

/**
 * hook_theme implementation
 *
 * @param array  $existing
 * @param string $type
 * @param string $theme
 * @param string $path
 *
 * @return array
 */
function flat_annotation_viewer_theme($existing, $type, $theme, $path) {

    return [

        'flat_annotation_viewer' => [
            'template' => 'theme/flat-annotation-viewer',
        ],
    ];
}

/**
* Implements hook_CMODEL_PID_islandora_view_object().
*/
function flat_annotation_viewer_flat_annotation_viewer_islandora_view_object($object, $page_number, $page_size) {

    module_load_include('inc', 'flat_annotation_viewer', 'includes/SolrMediaFetcher');

    $solr      = new SolrMediaFetcher();
    $parent_id = $solr->getParentPid($object->id);

    $module_path = drupal_get_path('module', 'flat_annotation_viewer');
    //drupal_add_js($module_path . '/node_modules/@tla/annotation-viewer/dist/elements/annotation-viewer.js', ['scope' => 'footer']);
    drupal_add_js($module_path . '/js/annotation-viewer.js', ['scope' => 'footer']);

    return theme('flat_annotation_viewer', [
        'annotation_id' => $parent_id,
    ]);
}

function flat_annotation_viewer_menu() {

    $items = [];

    $items['islandora/object/%islandora_object/av_api'] = [

        'title'           => 'FLAT Annotation Viewer',
        'type'            => MENU_CALLBACK,
        'page callback'   => 'flat_annotation_viewer_api',
        'page arguments'  => [2],
        'access callback' => 'flat_annotation_viewer_menu_access',
    ];

    return $items;
}

function flat_annotation_viewer_menu_access() {
    return true;
}

/**
* Implements hook_islandora_required_objects().
*/
function flat_annotation_viewer_islandora_required_objects(IslandoraTuque $connection) {

    $modulePath = drupal_get_path('module', 'flat_annotation_viewer');

    // Content Model
    $contentModel         = $connection->repository->constructObject('flat:annotation_viewer');
    $contentModel->owner  = 'fedoraAdmin';
    $contentModel->label  = 'FLAT Annotation Viewer Content Model';
    $contentModel->models = 'fedora-system:ContentModel-3.0';

    // DS-COMPOSITE-MODEL Datastream
    $datastream           = $contentModel->constructDatastream('DS-COMPOSITE-MODEL', 'X');
    $datastream->label    = 'DS-COMPOSITE-MODEL';
    $datastream->mimetype = 'application/xml';
    $datastream->setContentFromFile($modulePath . '/xml/ds_composite_model.xml', false);
    $contentModel->ingestDatastream($datastream);

    // Collection
    $collection         = $connection->repository->constructObject('flat:annotation_viewer_collection');
    $collection->owner  = 'fedoraAdmin';
    $collection->label  = 'FLAT Annotation Viewer Collection';
    $collection->models = 'islandora:collectionCModel';
    $collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', 'islandora:root');

    // Collection Policy
    $datastream           = $collection->constructDatastream('COLLECTION_POLICY', 'X');
    $datastream->label    = 'Collection policy';
    $datastream->mimetype = 'application/xml';
    $datastream->setContentFromFile($modulePath . '/xml/collection_policy.xml', false);
    $collection->ingestDatastream($datastream);

    return [

        'flat_annotation_viewer' => [

            'title'   => 'FLAT Annotation Viewer',
            'objects' => [

                $contentModel,
                $collection,
            ],
        ],
    ];
}
